// generated 2012/12/16 11:18:13 CET by danilo@dm1.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- wmpSniffer.glade
// for gtk 2.24.10 and gtkmm 2.24.2
//
// Please modify the corresponding derived classes in ./src/main_window.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "main_window_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtk/gtkimagemenuitem.h>
#include <gtkmm/adjustment.h>

main_window_glade::main_window_glade(
)
{  main_window = this;
   gmm_data = new GlademmData(get_accel_group());
   nuevo1 = NULL;
   abrir1 = NULL;
   guardar1 = NULL;
   guardar_como1 = NULL;
   image7 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-edit"), Gtk::IconSize(Gtk::ICON_SIZE_BUTTON)));
   import = NULL;
   image8 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-convert"), Gtk::IconSize(Gtk::ICON_SIZE_BUTTON)));
   create_log = NULL;
   separatormenuitem1 = NULL;
   salir1 = NULL;
   menuitem1_menu = Gtk::manage(new class Gtk::Menu());
   menuitem1 = NULL;
   cortar1 = NULL;
   copiar1 = NULL;
   pegar1 = NULL;
   borrar1 = NULL;
   menuitem2_menu = Gtk::manage(new class Gtk::Menu());
   menuitem2 = NULL;
   menuitem3 = NULL;
   acerca_de1 = NULL;
   menuitem4_menu = Gtk::manage(new class Gtk::Menu());
   menuitem4 = NULL;
   menubar1 = Gtk::manage(new class Gtk::MenuBar());
   alignment22 = Gtk::manage(new class Gtk::Alignment());
   label93 = Gtk::manage(new class Gtk::Label("<b>Current Tree</b>"));
   ct_frame = Gtk::manage(new class Gtk::Frame());
   alignment21 = Gtk::manage(new class Gtk::Alignment());
   label92 = Gtk::manage(new class Gtk::Label("<b>Next Tree</b>"));
   nt_frame = Gtk::manage(new class Gtk::Frame());
   hpaned1 = Gtk::manage(new class Gtk::HPaned());
   align2d = Gtk::manage(new class Gtk::Alignment());
   aa = Gtk::manage(new class Gtk::Label("<b>2D View</b>"));
   twodframe = Gtk::manage(new class Gtk::Frame());
   vbox9 = Gtk::manage(new class Gtk::VBox(false, 0));
   align1d = Gtk::manage(new class Gtk::Alignment());
   label77 = Gtk::manage(new class Gtk::Label("<b>Frames</b>"));
   onedview = Gtk::manage(new class Gtk::Frame());
   prim_cb = Gtk::manage(new class Gtk::CheckButton("Prim"));
   foreign_cb = Gtk::manage(new class Gtk::CheckButton("Foreign"));
   d1_cb = Gtk::manage(new class Gtk::CheckButton("1D Frames"));
   d2_cb = Gtk::manage(new class Gtk::CheckButton("2D Frames"));
   text_cb = Gtk::manage(new class Gtk::CheckButton("Text"));
   hbox20 = Gtk::manage(new class Gtk::HBox(false, 20));
   alignment12 = Gtk::manage(new class Gtk::Alignment());
   label79 = Gtk::manage(new class Gtk::Label("<b>Show Options</b>"));
   frame5 = Gtk::manage(new class Gtk::Frame());
   hbox19 = Gtk::manage(new class Gtk::HBox(false, 0));
   vbox10 = Gtk::manage(new class Gtk::VBox(false, 0));
   vpaned1 = Gtk::manage(new class Gtk::VPaned());
   xfield_tw = Gtk::manage(new class Gtk::TreeView());
   alignment10 = Gtk::manage(new class Gtk::Alignment());
   Info = Gtk::manage(new class Gtk::Label("<b>Frame Info</b>"));
   frame3 = Gtk::manage(new class Gtk::Frame());
   viewport1 = Gtk::manage(new class Gtk::Viewport(*manage(new Gtk::Adjustment(0,0,1)), *manage(new Gtk::Adjustment(0,0,1))));
   scrolledwindow6 = Gtk::manage(new class Gtk::ScrolledWindow());
   
   Gtk::Adjustment *spinbutton1_adj = Gtk::manage(new class Gtk::Adjustment(1, 0, 100, 1, 0, 0));
   spinbutton1 = Gtk::manage(new class Gtk::SpinButton(*spinbutton1_adj, 1, 0));
   button23 = Gtk::manage(new class Gtk::Button(">"));
   button6 = Gtk::manage(new class Gtk::Button("+"));
   button7 = Gtk::manage(new class Gtk::Button("-"));
   hbox18 = Gtk::manage(new class Gtk::HBox(false, 8));
   alignment17 = Gtk::manage(new class Gtk::Alignment());
   label88 = Gtk::manage(new class Gtk::Label("<b>Serial</b>"));
   frame10 = Gtk::manage(new class Gtk::Frame());
   
   Gtk::Adjustment *hscale_position_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 0, 0, 0, 0));
   hscale_position = Gtk::manage(new class Gtk::HScale(*hscale_position_adj));
   alignment18 = Gtk::manage(new class Gtk::Alignment());
   label89 = Gtk::manage(new class Gtk::Label("<b>File Id</b>"));
   frame11 = Gtk::manage(new class Gtk::Frame());
   
   Gtk::Adjustment *hscale_zoom_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 0, 0, 0, 0));
   hscale_zoom = Gtk::manage(new class Gtk::HScale(*hscale_zoom_adj));
   alignment19 = Gtk::manage(new class Gtk::Alignment());
   label90 = Gtk::manage(new class Gtk::Label("<b>Size</b>"));
   frame12 = Gtk::manage(new class Gtk::Frame());
   vbox11 = Gtk::manage(new class Gtk::VBox(false, 0));
   alignment11 = Gtk::manage(new class Gtk::Alignment());
   label78 = Gtk::manage(new class Gtk::Label("<b>Frame Selection</b>"));
   frame4 = Gtk::manage(new class Gtk::Frame());
   vbox3 = Gtk::manage(new class Gtk::VBox(false, 0));
   hpaned = Gtk::manage(new class Gtk::HPaned());
   hbox1 = Gtk::manage(new class Gtk::HBox(false, 0));
   label68 = Gtk::manage(new class Gtk::Label(""));
   label69 = Gtk::manage(new class Gtk::Label(""));
   label70 = Gtk::manage(new class Gtk::Label(""));
   label71 = Gtk::manage(new class Gtk::Label(""));
   label72 = Gtk::manage(new class Gtk::Label(""));
   hbox17 = Gtk::manage(new class Gtk::HBox(false, 0));
   image1 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-play"), Gtk::IconSize(Gtk::ICON_SIZE_BUTTON)));
   label43 = Gtk::manage(new class Gtk::Label("Play"));
   hbox4 = Gtk::manage(new class Gtk::HBox(false, 2));
   alignment1 = Gtk::manage(new class Gtk::Alignment());
   togglebutton1 = Gtk::manage(new class Gtk::ToggleButton());
   image9 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-record"), Gtk::IconSize(Gtk::ICON_SIZE_BUTTON)));
   label97 = Gtk::manage(new class Gtk::Label("Record"));
   hbox26 = Gtk::manage(new class Gtk::HBox(false, 2));
   alignment25 = Gtk::manage(new class Gtk::Alignment());
   rec_tb = Gtk::manage(new class Gtk::ToggleButton());
   image4 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-justify-fill"), Gtk::IconSize(Gtk::ICON_SIZE_BUTTON)));
   label52 = Gtk::manage(new class Gtk::Label("Statistics"));
   hbox9 = Gtk::manage(new class Gtk::HBox(false, 2));
   alignment4 = Gtk::manage(new class Gtk::Alignment());
   button9 = Gtk::manage(new class Gtk::Button());
   image5 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-find"), Gtk::IconSize(Gtk::ICON_SIZE_BUTTON)));
   label56 = Gtk::manage(new class Gtk::Label("Find"));
   hbox12 = Gtk::manage(new class Gtk::HBox(false, 2));
   alignment6 = Gtk::manage(new class Gtk::Alignment());
   button13 = Gtk::manage(new class Gtk::Button());
   image3 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-quit"), Gtk::IconSize(Gtk::ICON_SIZE_BUTTON)));
   label45 = Gtk::manage(new class Gtk::Label("Exit"));
   hbox6 = Gtk::manage(new class Gtk::HBox(false, 2));
   alignment3 = Gtk::manage(new class Gtk::Alignment());
   button8 = Gtk::manage(new class Gtk::Button());
   hbox2 = Gtk::manage(new class Gtk::HBox(false, 0));
   vbox2 = Gtk::manage(new class Gtk::VBox(false, 0));
   
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-new")));
   nuevo1 = (Gtk::ImageMenuItem *)&menuitem1_menu->items().back();
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-open")));
   abrir1 = (Gtk::ImageMenuItem *)&menuitem1_menu->items().back();
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-save")));
   guardar1 = (Gtk::ImageMenuItem *)&menuitem1_menu->items().back();
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-save-as")));
   guardar_como1 = (Gtk::ImageMenuItem *)&menuitem1_menu->items().back();
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem("Import", *image7));
   import = (Gtk::ImageMenuItem *)&menuitem1_menu->items().back();
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem("Create Log", *image8));
   create_log = (Gtk::ImageMenuItem *)&menuitem1_menu->items().back();
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separatormenuitem1 = (Gtk::MenuItem *)&menuitem1_menu->items().back();
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-quit")));
   salir1 = (Gtk::ImageMenuItem *)&menuitem1_menu->items().back();
   
   menuitem2_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-cut")));
   cortar1 = (Gtk::ImageMenuItem *)&menuitem2_menu->items().back();
   
   menuitem2_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-copy")));
   copiar1 = (Gtk::ImageMenuItem *)&menuitem2_menu->items().back();
   
   menuitem2_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-paste")));
   pegar1 = (Gtk::ImageMenuItem *)&menuitem2_menu->items().back();
   
   menuitem2_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-delete")));
   borrar1 = (Gtk::ImageMenuItem *)&menuitem2_menu->items().back();
   
   menuitem4_menu->items().push_back(Gtk::Menu_Helpers::MenuElem("A_cerca de"));
   acerca_de1 = (Gtk::MenuItem *)&menuitem4_menu->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem("_Archivo", *menuitem1_menu));
   menuitem1 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem("_Editar", *menuitem2_menu));
   menuitem2 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem("_Ver"));
   menuitem3 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem("A_yuda", *menuitem4_menu));
   menuitem4 = (Gtk::MenuItem *)&menubar1->items().back();
   image7->unset_flags(Gtk::CAN_FOCUS);
   image8->unset_flags(Gtk::CAN_FOCUS);
   menuitem1_menu->unset_flags(Gtk::CAN_FOCUS);
   menuitem2_menu->unset_flags(Gtk::CAN_FOCUS);
   menuitem4_menu->unset_flags(Gtk::CAN_FOCUS);
   menubar1->unset_flags(Gtk::CAN_FOCUS);
   alignment22->unset_flags(Gtk::CAN_FOCUS);
   label93->unset_flags(Gtk::CAN_FOCUS);
   label93->set_use_markup(true);
   ct_frame->unset_flags(Gtk::CAN_FOCUS);
   ct_frame->set_shadow_type(Gtk::SHADOW_IN);
   ct_frame->set_label_align(0,0);
   ct_frame->add(*alignment22);
   ct_frame->set_label_widget(*label93);
   alignment21->unset_flags(Gtk::CAN_FOCUS);
   label92->unset_flags(Gtk::CAN_FOCUS);
   label92->set_use_markup(true);
   nt_frame->unset_flags(Gtk::CAN_FOCUS);
   nt_frame->set_shadow_type(Gtk::SHADOW_IN);
   nt_frame->set_label_align(0,0);
   nt_frame->add(*alignment21);
   nt_frame->set_label_widget(*label92);
   hpaned1->set_flags(Gtk::CAN_FOCUS);
   hpaned1->pack1(*ct_frame, Gtk::SHRINK);
   hpaned1->pack2(*nt_frame, Gtk::EXPAND|Gtk::SHRINK);
   align2d->unset_flags(Gtk::CAN_FOCUS);
   align2d->add(*hpaned1);
   aa->unset_flags(Gtk::CAN_FOCUS);
   aa->set_use_markup(true);
   twodframe->unset_flags(Gtk::CAN_FOCUS);
   twodframe->set_border_width(2);
   twodframe->set_label_align(0,0);
   twodframe->add(*align2d);
   twodframe->set_label_widget(*aa);
   vbox9->unset_flags(Gtk::CAN_FOCUS);
   vbox9->pack_start(*twodframe);
   align1d->unset_flags(Gtk::CAN_FOCUS);
   label77->unset_flags(Gtk::CAN_FOCUS);
   label77->set_use_markup(true);
   onedview->unset_flags(Gtk::CAN_FOCUS);
   onedview->set_border_width(2);
   onedview->set_label_align(0,0);
   onedview->add(*align1d);
   onedview->set_label_widget(*label77);
   prim_cb->set_flags(Gtk::CAN_FOCUS);
   prim_cb->set_mode(true);
   foreign_cb->set_flags(Gtk::CAN_FOCUS);
   foreign_cb->set_mode(true);
   d1_cb->set_flags(Gtk::CAN_FOCUS);
   d1_cb->set_mode(true);
   d2_cb->set_flags(Gtk::CAN_FOCUS);
   d2_cb->set_mode(true);
   text_cb->set_flags(Gtk::CAN_FOCUS);
   text_cb->set_mode(true);
   hbox20->unset_flags(Gtk::CAN_FOCUS);
   hbox20->set_border_width(3);
   hbox20->pack_start(*prim_cb, Gtk::PACK_SHRINK, 0);
   hbox20->pack_start(*foreign_cb, Gtk::PACK_SHRINK, 0);
   hbox20->pack_start(*d1_cb, Gtk::PACK_SHRINK, 0);
   hbox20->pack_start(*d2_cb, Gtk::PACK_SHRINK, 0);
   hbox20->pack_start(*text_cb, Gtk::PACK_SHRINK, 0);
   alignment12->unset_flags(Gtk::CAN_FOCUS);
   alignment12->add(*hbox20);
   label79->unset_flags(Gtk::CAN_FOCUS);
   label79->set_use_markup(true);
   frame5->unset_flags(Gtk::CAN_FOCUS);
   frame5->set_border_width(2);
   frame5->set_label_align(0,0);
   frame5->add(*alignment12);
   frame5->set_label_widget(*label79);
   hbox19->unset_flags(Gtk::CAN_FOCUS);
   hbox19->pack_start(*frame5);
   vbox10->unset_flags(Gtk::CAN_FOCUS);
   vbox10->pack_start(*onedview);
   vbox10->pack_start(*hbox19, Gtk::PACK_SHRINK, 0);
   vpaned1->set_flags(Gtk::CAN_FOCUS);
   vpaned1->set_position(500);
   vpaned1->pack1(*vbox9, Gtk::SHRINK);
   vpaned1->pack2(*vbox10, Gtk::EXPAND|Gtk::SHRINK);
   xfield_tw->set_flags(Gtk::CAN_FOCUS);
   xfield_tw->set_headers_visible(false);
   alignment10->unset_flags(Gtk::CAN_FOCUS);
   alignment10->add(*xfield_tw);
   Info->unset_flags(Gtk::CAN_FOCUS);
   Info->set_use_markup(true);
   frame3->unset_flags(Gtk::CAN_FOCUS);
   frame3->set_border_width(2);
   frame3->set_label_align(0,0);
   frame3->add(*alignment10);
   frame3->set_label_widget(*Info);
   viewport1->unset_flags(Gtk::CAN_FOCUS);
   viewport1->set_shadow_type(Gtk::SHADOW_NONE);
   viewport1->add(*frame3);
   scrolledwindow6->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow6->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow6->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow6->add(*viewport1);
   spinbutton1->set_flags(Gtk::CAN_FOCUS);
   spinbutton1->set_numeric(true);
   button23->set_size_request(22,-1);
   button23->set_flags(Gtk::CAN_FOCUS);
   button6->set_size_request(22,-1);
   button6->set_flags(Gtk::CAN_FOCUS);
   button7->set_size_request(22,-1);
   button7->set_flags(Gtk::CAN_FOCUS);
   hbox18->unset_flags(Gtk::CAN_FOCUS);
   hbox18->set_border_width(5);
   hbox18->pack_start(*spinbutton1);
   hbox18->pack_start(*button23);
   hbox18->pack_start(*button6);
   hbox18->pack_start(*button7);
   alignment17->unset_flags(Gtk::CAN_FOCUS);
   alignment17->add(*hbox18);
   label88->unset_flags(Gtk::CAN_FOCUS);
   label88->set_use_markup(true);
   frame10->unset_flags(Gtk::CAN_FOCUS);
   frame10->set_shadow_type(Gtk::SHADOW_OUT);
   frame10->set_label_align(0,0);
   frame10->add(*alignment17);
   frame10->set_label_widget(*label88);
   hscale_position->set_size_request(270,-1);
   hscale_position->set_flags(Gtk::CAN_FOCUS);
   hscale_position->set_digits(0);
   alignment18->unset_flags(Gtk::CAN_FOCUS);
   alignment18->add(*hscale_position);
   label89->unset_flags(Gtk::CAN_FOCUS);
   label89->set_use_markup(true);
   frame11->unset_flags(Gtk::CAN_FOCUS);
   frame11->set_shadow_type(Gtk::SHADOW_OUT);
   frame11->set_label_align(0,0);
   frame11->add(*alignment18);
   frame11->set_label_widget(*label89);
   hscale_zoom->set_flags(Gtk::CAN_FOCUS);
   hscale_zoom->set_digits(0);
   alignment19->unset_flags(Gtk::CAN_FOCUS);
   alignment19->add(*hscale_zoom);
   label90->unset_flags(Gtk::CAN_FOCUS);
   label90->set_use_markup(true);
   frame12->unset_flags(Gtk::CAN_FOCUS);
   frame12->set_shadow_type(Gtk::SHADOW_OUT);
   frame12->set_label_align(0,0);
   frame12->add(*alignment19);
   frame12->set_label_widget(*label90);
   vbox11->unset_flags(Gtk::CAN_FOCUS);
   vbox11->pack_start(*frame10);
   vbox11->pack_start(*frame11);
   vbox11->pack_start(*frame12);
   alignment11->unset_flags(Gtk::CAN_FOCUS);
   alignment11->set_border_width(5);
   alignment11->add(*vbox11);
   label78->unset_flags(Gtk::CAN_FOCUS);
   label78->set_use_markup(true);
   frame4->unset_flags(Gtk::CAN_FOCUS);
   frame4->set_border_width(2);
   frame4->set_label_align(0,0);
   frame4->add(*alignment11);
   frame4->set_label_widget(*label78);
   vbox3->unset_flags(Gtk::CAN_FOCUS);
   vbox3->pack_start(*scrolledwindow6);
   vbox3->pack_start(*frame4, Gtk::PACK_SHRINK, 0);
   hpaned->set_flags(Gtk::CAN_FOCUS);
   hpaned->set_position(400);
   hpaned->pack1(*vpaned1, Gtk::SHRINK);
   hpaned->pack2(*vbox3, Gtk::EXPAND|Gtk::SHRINK);
   hbox1->unset_flags(Gtk::CAN_FOCUS);
   hbox1->pack_start(*hpaned);
   label68->set_size_request(200,-1);
   label68->unset_flags(Gtk::CAN_FOCUS);
   label68->set_line_wrap(true);
   label69->set_size_request(128,-1);
   label69->unset_flags(Gtk::CAN_FOCUS);
   label69->set_line_wrap(true);
   label70->set_size_request(200,-1);
   label70->unset_flags(Gtk::CAN_FOCUS);
   label70->set_line_wrap(true);
   label71->set_size_request(128,-1);
   label71->unset_flags(Gtk::CAN_FOCUS);
   label72->set_size_request(128,-1);
   label72->unset_flags(Gtk::CAN_FOCUS);
   hbox17->unset_flags(Gtk::CAN_FOCUS);
   hbox17->pack_start(*label68);
   hbox17->pack_start(*label69);
   hbox17->pack_start(*label70);
   hbox17->pack_start(*label71);
   hbox17->pack_start(*label72);
   image1->unset_flags(Gtk::CAN_FOCUS);
   image1->set_padding(-1,1);
   label43->unset_flags(Gtk::CAN_FOCUS);
   label43->set_justify(Gtk::JUSTIFY_CENTER);
   hbox4->unset_flags(Gtk::CAN_FOCUS);
   hbox4->pack_start(*image1, Gtk::PACK_SHRINK, 0);
   hbox4->pack_start(*label43, Gtk::PACK_SHRINK, 0);
   alignment1->unset_flags(Gtk::CAN_FOCUS);
   alignment1->add(*hbox4);
   togglebutton1->set_flags(Gtk::CAN_FOCUS);
   togglebutton1->add(*alignment1);
   image9->unset_flags(Gtk::CAN_FOCUS);
   label97->unset_flags(Gtk::CAN_FOCUS);
   label97->set_justify(Gtk::JUSTIFY_CENTER);
   hbox26->unset_flags(Gtk::CAN_FOCUS);
   hbox26->pack_start(*image9, Gtk::PACK_SHRINK, 0);
   hbox26->pack_start(*label97, Gtk::PACK_SHRINK, 0);
   alignment25->unset_flags(Gtk::CAN_FOCUS);
   alignment25->add(*hbox26);
   rec_tb->set_flags(Gtk::CAN_FOCUS);
   rec_tb->add(*alignment25);
   image4->unset_flags(Gtk::CAN_FOCUS);
   label52->unset_flags(Gtk::CAN_FOCUS);
   label52->set_justify(Gtk::JUSTIFY_CENTER);
   hbox9->unset_flags(Gtk::CAN_FOCUS);
   hbox9->pack_start(*image4, Gtk::PACK_SHRINK, 0);
   hbox9->pack_start(*label52, Gtk::PACK_SHRINK, 0);
   alignment4->unset_flags(Gtk::CAN_FOCUS);
   alignment4->add(*hbox9);
   button9->set_flags(Gtk::CAN_FOCUS);
   button9->add(*alignment4);
   image5->unset_flags(Gtk::CAN_FOCUS);
   label56->unset_flags(Gtk::CAN_FOCUS);
   label56->set_justify(Gtk::JUSTIFY_CENTER);
   hbox12->unset_flags(Gtk::CAN_FOCUS);
   hbox12->pack_start(*image5, Gtk::PACK_SHRINK, 0);
   hbox12->pack_start(*label56, Gtk::PACK_SHRINK, 0);
   alignment6->unset_flags(Gtk::CAN_FOCUS);
   alignment6->add(*hbox12);
   button13->set_flags(Gtk::CAN_FOCUS);
   button13->add(*alignment6);
   image3->unset_flags(Gtk::CAN_FOCUS);
   label45->unset_flags(Gtk::CAN_FOCUS);
   label45->set_justify(Gtk::JUSTIFY_CENTER);
   hbox6->unset_flags(Gtk::CAN_FOCUS);
   hbox6->pack_start(*image3, Gtk::PACK_SHRINK, 0);
   hbox6->pack_start(*label45, Gtk::PACK_SHRINK, 0);
   alignment3->unset_flags(Gtk::CAN_FOCUS);
   alignment3->add(*hbox6);
   button8->set_flags(Gtk::CAN_FOCUS);
   button8->add(*alignment3);
   hbox2->unset_flags(Gtk::CAN_FOCUS);
   hbox2->pack_start(*togglebutton1);
   hbox2->pack_start(*rec_tb);
   hbox2->pack_start(*button9);
   hbox2->pack_start(*button13);
   hbox2->pack_start(*button8);
   vbox2->unset_flags(Gtk::CAN_FOCUS);
   vbox2->pack_start(*menubar1, Gtk::PACK_SHRINK, 0);
   vbox2->pack_start(*hbox1);
   vbox2->pack_start(*hbox17, Gtk::PACK_SHRINK, 0);
   vbox2->pack_start(*hbox2, Gtk::PACK_SHRINK, 0);
   main_window->set_size_request(800,600);
   main_window->unset_flags(Gtk::CAN_FOCUS);
   main_window->set_title("Main");
   main_window->add(*vbox2);
   nuevo1->show();
   abrir1->show();
   guardar1->show();
   guardar_como1->show();
   image7->show();
   import->show();
   image8->show();
   create_log->show();
   separatormenuitem1->show();
   salir1->show();
   menuitem1->show();
   cortar1->show();
   copiar1->show();
   pegar1->show();
   borrar1->show();
   menuitem2->show();
   menuitem3->show();
   acerca_de1->show();
   menuitem4->show();
   menubar1->show();
   alignment22->show();
   label93->show();
   ct_frame->show();
   alignment21->show();
   label92->show();
   nt_frame->show();
   hpaned1->show();
   align2d->show();
   aa->show();
   twodframe->show();
   vbox9->show();
   align1d->show();
   label77->show();
   onedview->show();
   prim_cb->show();
   foreign_cb->show();
   d1_cb->show();
   d2_cb->show();
   text_cb->show();
   hbox20->show();
   alignment12->show();
   label79->show();
   frame5->show();
   hbox19->show();
   vbox10->show();
   vpaned1->show();
   xfield_tw->show();
   alignment10->show();
   Info->show();
   frame3->show();
   viewport1->show();
   scrolledwindow6->show();
   spinbutton1->show();
   button23->show();
   button6->show();
   button7->show();
   hbox18->show();
   alignment17->show();
   label88->show();
   frame10->show();
   hscale_position->show();
   alignment18->show();
   label89->show();
   frame11->show();
   hscale_zoom->show();
   alignment19->show();
   label90->show();
   frame12->show();
   vbox11->show();
   alignment11->show();
   label78->show();
   frame4->show();
   vbox3->show();
   hpaned->show();
   hbox1->show();
   label68->show();
   label69->show();
   label70->show();
   label71->show();
   label72->show();
   hbox17->show();
   image1->show();
   label43->show();
   hbox4->show();
   alignment1->show();
   togglebutton1->show();
   image9->show();
   label97->show();
   hbox26->show();
   alignment25->show();
   rec_tb->show();
   image4->show();
   label52->show();
   hbox9->show();
   alignment4->show();
   button9->show();
   image5->show();
   label56->show();
   hbox12->show();
   alignment6->show();
   button13->show();
   image3->show();
   label45->show();
   hbox6->show();
   alignment3->show();
   button8->show();
   hbox2->show();
   vbox2->show();
   main_window->show();
   nuevo1->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_nuevo1_activate), false);
   abrir1->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_abrir1_activate), false);
   guardar1->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_guardar1_activate), false);
   guardar_como1->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_guardar_como1_activate), false);
   import->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_import_activate), false);
   create_log->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_create_log_activate), false);
   salir1->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_salir1_activate), false);
   cortar1->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_cortar1_activate), false);
   copiar1->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_copiar1_activate), false);
   pegar1->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_pegar1_activate), false);
   borrar1->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_borrar1_activate), false);
   acerca_de1->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_acerca_de1_activate), false);
   xfield_tw->signal_row_collapsed().connect(sigc::mem_fun(*this, &main_window_glade::on_xfield_tw_row_collapsed), false);
   xfield_tw->signal_cursor_changed().connect(sigc::mem_fun(*this, &main_window_glade::on_xfield_tw_cursor_changed), false);
   xfield_tw->signal_row_expanded().connect(sigc::mem_fun(*this, &main_window_glade::on_xfield_tw_row_expanded), false);
   xfield_tw->signal_focus_in_event().connect(sigc::mem_fun(*this, &main_window_glade::on_xfield_tw_focus_in_event), false);
   xfield_tw->signal_focus_out_event().connect(sigc::mem_fun(*this, &main_window_glade::on_xfield_tw_focus_out_event), false);
   spinbutton1->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_spinbutton1_activate), false);
   button23->signal_clicked().connect(sigc::mem_fun(*this, &main_window_glade::on_button23_clicked), false);
   button6->signal_clicked().connect(sigc::mem_fun(*this, &main_window_glade::on_button6_clicked), false);
   button7->signal_clicked().connect(sigc::mem_fun(*this, &main_window_glade::on_button7_clicked), false);
   hscale_position->signal_value_changed().connect(sigc::mem_fun(*this, &main_window_glade::on_hscale_position_value_changed), false);
   hscale_zoom->signal_value_changed().connect(sigc::mem_fun(*this, &main_window_glade::on_hscale_zoom_value_changed), false);
   togglebutton1->signal_clicked().connect(sigc::mem_fun(*this, &main_window_glade::on_togglebutton1_clicked), false);
   rec_tb->signal_toggled().connect(sigc::mem_fun(*this, &main_window_glade::on_rec_tb_toggled), false);
   rec_tb->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_rec_tb_activate), false);
   rec_tb->signal_released().connect(sigc::mem_fun(*this, &main_window_glade::on_rec_tb_released), false);
   button9->signal_clicked().connect(sigc::mem_fun(*this, &main_window_glade::on_button9_clicked), false);
   button13->signal_clicked().connect(sigc::mem_fun(*this, &main_window_glade::on_button13_clicked), false);
   button8->signal_clicked().connect(sigc::mem_fun(*this, &main_window_glade::on_button8_clicked), false);
   main_window->signal_button_press_event().connect(sigc::mem_fun(*this, &main_window_glade::on_main_window_button_press_event), false);
   main_window->signal_expose_event().connect(sigc::mem_fun(*this, &main_window_glade::on_main_window_expose_event), false);
   main_window->signal_motion_notify_event().connect(sigc::mem_fun(*this, &main_window_glade::on_main_window_motion_notify_event), false);
}

main_window_glade::~main_window_glade()
{  delete gmm_data;
}
