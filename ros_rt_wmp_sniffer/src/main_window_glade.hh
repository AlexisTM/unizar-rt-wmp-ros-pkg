// generated 2012/12/15 17:58:03 CET by danilo@dm1.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- wmpSniffer-new.glade
// for gtk 2.24.10 and gtkmm 2.24.2
//
// Please modify the corresponding derived classes in ./src/main_window.hh and./src/main_window.cc

#ifndef _MAIN_WINDOW_GLADE_HH
#  define _MAIN_WINDOW_GLADE_HH

// Since all your widgets were private I made them all public.
// To differentiate between accessable (e.g. entries, output labels)
// and unaccessible widgets (e.g. static labels, containers)
// you should use the 'visibility' property (only visible in C++ mode)


#if !defined(GLADEMM_DATA)
#define GLADEMM_DATA 
#include <gtkmm/accelgroup.h>

class GlademmData
{  
        
        Glib::RefPtr<Gtk::AccelGroup> accgrp;
public:
        
        GlademmData(Glib::RefPtr<Gtk::AccelGroup> ag) : accgrp(ag)
        {  
        }
        
        Glib::RefPtr<Gtk::AccelGroup>  getAccelGroup()
        {  return accgrp;
        }
};
#endif //GLADEMM_DATA

#include <gtkmm/window.h>
#include <gtkmm/imagemenuitem.h>
#include <gtkmm/image.h>
#include <gtkmm/menuitem.h>
#include <gtkmm/menu.h>
#include <gtkmm/menubar.h>
#include <gtkmm/alignment.h>
#include <gtkmm/label.h>
#include <gtkmm/frame.h>
#include <gtkmm/paned.h>
#include <gtkmm/box.h>
#include <gtkmm/checkbutton.h>
#include <gtkmm/treeview.h>
#include <gtkmm/viewport.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/spinbutton.h>
#include <gtkmm/button.h>
#include <gtkmm/scale.h>
#include <gtkmm/togglebutton.h>

class main_window_glade : public Gtk::Window
{  
        
        GlademmData *gmm_data;
public:
        class Gtk::Window * main_window;
        class Gtk::ImageMenuItem * nuevo1;
        class Gtk::ImageMenuItem * abrir1;
        class Gtk::ImageMenuItem * guardar1;
        class Gtk::ImageMenuItem * guardar_como1;
        class Gtk::Image * image7;
        class Gtk::ImageMenuItem * import;
        class Gtk::Image * image8;
        class Gtk::ImageMenuItem * create_log;
        class Gtk::MenuItem * separatormenuitem1;
        class Gtk::ImageMenuItem * salir1;
        class Gtk::Menu * menuitem1_menu;
        class Gtk::MenuItem * menuitem1;
        class Gtk::ImageMenuItem * cortar1;
        class Gtk::ImageMenuItem * copiar1;
        class Gtk::ImageMenuItem * pegar1;
        class Gtk::ImageMenuItem * borrar1;
        class Gtk::Menu * menuitem2_menu;
        class Gtk::MenuItem * menuitem2;
        class Gtk::MenuItem * menuitem3;
        class Gtk::MenuItem * acerca_de1;
        class Gtk::Menu * menuitem4_menu;
        class Gtk::MenuItem * menuitem4;
        class Gtk::MenuBar * menubar1;
        class Gtk::Alignment * alignment22;
        class Gtk::Label * label93;
        class Gtk::Frame * ct_frame;
        class Gtk::Alignment * alignment21;
        class Gtk::Label * label92;
        class Gtk::Frame * nt_frame;
        class Gtk::HPaned * hpaned1;
        class Gtk::Alignment * align2d;
        class Gtk::Label * aa;
        class Gtk::Frame * twodframe;
        class Gtk::VBox * vbox9;
        class Gtk::Alignment * align1d;
        class Gtk::Label * label77;
        class Gtk::Frame * onedview;
        class Gtk::CheckButton * prim_cb;
        class Gtk::CheckButton * foreign_cb;
        class Gtk::CheckButton * d1_cb;
        class Gtk::CheckButton * d2_cb;
        class Gtk::CheckButton * text_cb;
        class Gtk::HBox * hbox20;
        class Gtk::Alignment * alignment12;
        class Gtk::Label * label79;
        class Gtk::Frame * frame5;
        class Gtk::HBox * hbox19;
        class Gtk::VBox * vbox10;
        class Gtk::VPaned * vpaned1;
        class Gtk::TreeView * xfield_tw;
        class Gtk::Alignment * alignment10;
        class Gtk::Label * Info;
        class Gtk::Frame * frame3;
        class Gtk::Viewport * viewport1;
        class Gtk::ScrolledWindow * scrolledwindow6;
        class Gtk::SpinButton * spinbutton1;
        class Gtk::Button * button23;
        class Gtk::Button * button6;
        class Gtk::Button * button7;
        class Gtk::HBox * hbox18;
        class Gtk::Alignment * alignment17;
        class Gtk::Label * label88;
        class Gtk::Frame * frame10;
        class Gtk::HScale * hscale_position;
        class Gtk::Alignment * alignment18;
        class Gtk::Label * label89;
        class Gtk::Frame * frame11;
        class Gtk::HScale * hscale_zoom;
        class Gtk::Alignment * alignment19;
        class Gtk::Label * label90;
        class Gtk::Frame * frame12;
        class Gtk::VBox * vbox11;
        class Gtk::Alignment * alignment11;
        class Gtk::Label * label78;
        class Gtk::Frame * frame4;
        class Gtk::VBox * vbox3;
        class Gtk::HPaned * hpaned;
        class Gtk::HBox * hbox1;
        class Gtk::Label * label68;
        class Gtk::Label * label69;
        class Gtk::Label * label70;
        class Gtk::Label * label71;
        class Gtk::Label * label72;
        class Gtk::HBox * hbox17;
        class Gtk::Image * image1;
        class Gtk::Label * label43;
        class Gtk::HBox * hbox4;
        class Gtk::Alignment * alignment1;
        class Gtk::ToggleButton * togglebutton1;
        class Gtk::Image * image9;
        class Gtk::Label * label97;
        class Gtk::HBox * hbox26;
        class Gtk::Alignment * alignment25;
        class Gtk::ToggleButton * rec_tb;
        class Gtk::Image * image4;
        class Gtk::Label * label52;
        class Gtk::HBox * hbox9;
        class Gtk::Alignment * alignment4;
        class Gtk::Button * button9;
        class Gtk::Image * image5;
        class Gtk::Label * label56;
        class Gtk::HBox * hbox12;
        class Gtk::Alignment * alignment6;
        class Gtk::Button * button13;
        class Gtk::Image * image3;
        class Gtk::Label * label45;
        class Gtk::HBox * hbox6;
        class Gtk::Alignment * alignment3;
        class Gtk::Button * button8;
        class Gtk::HBox * hbox2;
        class Gtk::VBox * vbox2;
protected:
        
        main_window_glade();
        
        ~main_window_glade();
private:
        virtual void on_nuevo1_activate() = 0;
        virtual void on_abrir1_activate() = 0;
        virtual void on_guardar1_activate() = 0;
        virtual void on_guardar_como1_activate() = 0;
        virtual void on_import_activate() = 0;
        virtual void on_create_log_activate() = 0;
        virtual void on_salir1_activate() = 0;
        virtual void on_cortar1_activate() = 0;
        virtual void on_copiar1_activate() = 0;
        virtual void on_pegar1_activate() = 0;
        virtual void on_borrar1_activate() = 0;
        virtual void on_acerca_de1_activate() = 0;
        virtual void on_xfield_tw_row_collapsed(const Gtk::TreeModel::iterator& iter, const Gtk::TreeModel::Path& path) = 0;
        virtual void on_xfield_tw_cursor_changed() = 0;
        virtual void on_xfield_tw_row_expanded(const Gtk::TreeModel::iterator& iter, const Gtk::TreeModel::Path& path) = 0;
        virtual bool on_xfield_tw_focus_in_event(GdkEventFocus *ev) = 0;
        virtual bool on_xfield_tw_focus_out_event(GdkEventFocus *ev) = 0;
        virtual void on_spinbutton1_activate() = 0;
        virtual void on_button23_clicked() = 0;
        virtual void on_button6_clicked() = 0;
        virtual void on_button7_clicked() = 0;
        virtual void on_hscale_position_value_changed() = 0;
        virtual void on_hscale_zoom_value_changed() = 0;
        virtual void on_togglebutton1_clicked() = 0;
        virtual void on_rec_tb_toggled() = 0;
        virtual void on_rec_tb_activate() = 0;
        virtual void on_rec_tb_released() = 0;
        virtual void on_button9_clicked() = 0;
        virtual void on_button13_clicked() = 0;
        virtual void on_button8_clicked() = 0;
        virtual bool on_main_window_button_press_event(GdkEventButton *ev) = 0;
        virtual bool on_main_window_expose_event(GdkEventExpose *ev) = 0;
        virtual bool on_main_window_motion_notify_event(GdkEventMotion *ev) = 0;
};
#endif
